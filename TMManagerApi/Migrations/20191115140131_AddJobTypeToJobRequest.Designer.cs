// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TMManagerApi.Models;

namespace TMManagerApi.Migrations
{
    [DbContext(typeof(SatelliteContext))]
    [Migration("20191115140131_AddJobTypeToJobRequest")]
    partial class AddJobTypeToJobRequest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TMManagerApi.Models.JobRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeviceId");

                    b.Property<string>("JobDetails");

                    b.Property<string>("JobType");

                    b.Property<DateTime>("RequestDateTime");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("JobRequests");
                });

            modelBuilder.Entity("TMManagerApi.Models.JobResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsSuccess");

                    b.Property<int>("JobRequestId");

                    b.Property<DateTime>("ResponseDateTime");

                    b.Property<string>("ResponseMessage");

                    b.HasKey("Id");

                    b.HasIndex("JobRequestId");

                    b.ToTable("JobResponses");
                });

            modelBuilder.Entity("TMManagerApi.Models.OnlineSatellite", b =>
                {
                    b.Property<string>("Fingerprint")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Account");

                    b.Property<bool>("IsDualMeter");

                    b.Property<bool>("IsOnline");

                    b.Property<DateTime>("LastSynch");

                    b.Property<string>("Meter");

                    b.Property<string>("OS");

                    b.Property<string>("Printer");

                    b.Property<string>("RemoteServiceVersion");

                    b.Property<string>("TeamViewerID");

                    b.Property<string>("TeamViewerVersion");

                    b.Property<string>("Truck");

                    b.Property<string>("TruckMasterVersion");

                    b.HasKey("Fingerprint");

                    b.ToTable("Satellites");
                });

            modelBuilder.Entity("TMManagerApi.Models.JobResponse", b =>
                {
                    b.HasOne("TMManagerApi.Models.JobRequest", "JobRequest")
                        .WithMany("JobResponses")
                        .HasForeignKey("JobRequestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
